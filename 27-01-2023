DAY-3

1.BINARY TREE LEVEL ORDER TRAVERSAL

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result=new LinkedList<>();
        if(root!=null){
            Queue<TreeNode> queue=new LinkedList<>();
            queue.add(root);

            while(!queue.isEmpty()){
                int n=queue.size();
                List<Integer> l=new LinkedList<>();
                for(int i=0;i<n;i++){
                    TreeNode curr=queue.remove();
                    l.add(curr.val);
                    if(curr.left!=null){
                        queue.add(curr.left);
                    }
                    if(curr.right!=null){
                        queue.add(curr.right);
                    }
                }
                result.add(l);
            } 
        }
        return result;
    }
}
